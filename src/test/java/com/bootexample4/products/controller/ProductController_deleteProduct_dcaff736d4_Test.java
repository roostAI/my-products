// Test generated by RoostGPT for test eon-test using AI Type Open AI and AI Model gpt-4

package com.bootexample4.products.controller;

import static org.mockito.Mockito.doNothing;
import static org.mockito.Mockito.when;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;

import java.util.Optional;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.bootexample4.products.model.Product;
import com.bootexample4.products.repository.ProductRepository;

public class ProductController_deleteProduct_dcaff736d4_Test {

    @InjectMocks
    ProductController productController;

    @Mock
    ProductRepository productRepository;

    @Test
    public void testDeleteProduct_Success() {
        MockitoAnnotations.initMocks(this);
        Product product = new Product();
        product.setId(1L);
        Optional<Product> productOptional = Optional.of(product);

        when(productRepository.findById(any(Long.class))).thenReturn(productOptional);
        doNothing().when(productRepository).delete(product);

        ResponseEntity<Object> responseEntity = productController.deleteProduct(1L);

        assertEquals(responseEntity.getStatusCode(), HttpStatus.OK);
    }

    @Test
    public void testDeleteProduct_NotFound() {
        MockitoAnnotations.initMocks(this);
        when(productRepository.findById(any(Long.class))).thenReturn(Optional.empty());

        ResponseEntity<Object> responseEntity = productController.deleteProduct(1L);

        assertEquals(responseEntity.getStatusCode(), HttpStatus.NOT_FOUND);
    }
}
